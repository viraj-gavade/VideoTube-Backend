<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= channel.fullname %>'s Channel</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #065fd4;
            --secondary-color: #606060;
            --background-color: #f9f9f9;
            --white: #ffffff;
            --red: #cc0000;
        }
        body {
            font-family: 'Inter', 'Roboto', Arial, sans-serif;
            background-color: var(--background-color);
            line-height: 1.6;
        }
        .channel-container {
            
            padding-left: 15rem;
        }
        .cover-image {
            width: 100%;
            height: 300px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        .cover-image:hover {
            transform: scale(1.02);
        }
        .profile-header {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            border-bottom: 1px solid #e0e0e0;
        }
        .avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 1.5rem;
            border: 3px solid white;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        .avatar:hover {
            transform: scale(1.05);
        }
        .channel-info {
            flex-grow: 1;
        }
        .channel-name {
            display: flex;
            align-items: center;
            margin-bottom: 0.75rem;
        }
        .channel-name h1 {
            font-size: 1.5rem;
            font-weight: 600;
            color: #030303;
        }
        .channel-stats {
            display: flex;
            gap: 1.25rem;
            margin-top: 0.625rem;
            color: var(--secondary-color);
            font-size: 0.875rem;
        }
        .btn {
            transition: all 0.3s ease;
            font-weight: 500;
            text-transform: uppercase;
            border-radius: 9999px;
            padding: 0.625rem 1rem;
        }
        .edit-profile-btn {
            background-color: transparent;
            border: 1px solid var(--primary-color);
            color: var(--primary-color);
        }
        .edit-profile-btn:hover {
            background-color: rgba(6, 95, 212, 0.1);
        }
        .subscribe-btn {
            background-color: <%= channel.isSubscribed ? '#606060' : '#cc0000' %>;
            color: white;
        }
        .subscribe-btn:hover {
            opacity: 0.9;
        }
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .edit-modal {
            background-color: white;
            border-radius: 0.5rem;
            width: 100%;
            max-width: 24rem;
            padding: 1.5rem;
            box-shadow: 0 10px 15px rgba(0,0,0,0.1);
        }
        .video-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
            padding: 1.5rem;
        }
        .video-thumbnail {
            background-color: #f0f0f0;
            border-radius: 0.5rem;
            overflow: hidden;
            transition: transform 0.3s ease;
        }
        .video-thumbnail:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .Profile-Video-Link{
            text-decoration: none;
            color: black;
        }
           /* Header Styles */
           .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            background-color: white;
            border-bottom: 1px solid #e0e0e0;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-left {
            display: flex;
            align-items: center;
        }

        .header-left img {
            height: 40px;
            margin-right: 20px;
        }

        .search-bar {
            display: flex;
            width: 600px;
        }

        .search-bar input {
            flex-grow: 1;
            padding: 8px 12px;
            border: 1px solid #d3d3d3;
            border-right: none;
            outline: none;
        }

        .search-bar button {
            padding: 8px 20px;
            background-color: #f8f8f8;
            border: 1px solid #d3d3d3;
            cursor: pointer;
        }

        .header-right {
            display: flex;
            align-items: center;
            position: relative;
        }

        .header-right img {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            margin-left: 15px;
            cursor: pointer;
        }

        /* Profile Dropdown Styles */
        .profile-dropdown {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            border: 1px solid #d3d3d3;
            border-radius: 4px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            min-width: 180px;
            z-index: 1000;
            margin-top: 10px;
        }

        .profile-dropdown.show {
            display: block;
        }

        .dropdown-item {
            padding: 10px 15px;
            text-decoration: none;
            color: #030303;
            display: block;
            transition: background-color 0.2s;
        }

        .dropdown-item:hover {
            background-color: #f0f0f0;
        }
        .sidebar {
            width: 240px;
            background-color: white;
            height: calc(100vh - 60px);
            position: fixed;
            left: 0;
            top: 60px;
            border-right: 1px solid #e0e0e0;
            overflow-y: auto;
        }

        .sidebar-item {
            display: flex;
            align-items: center;
            padding: 10px 20px;
            cursor: pointer;
        }

        .sidebar-item:hover {
            background-color: #f0f0f0;
        }

        .sidebar-item img {
            width: 24px;
            margin-right: 15px;
        }

        .sidebar-link {
            text-decoration: none;
            color: #030303;
        }
    </style>
</head>
<body class="bg-gray-100">
     <!-- Header -->
     <div class="header">
        <div class="header-left">
            <img src="https://w7.pngwing.com/pngs/936/468/png-transparent-youtube-logo-youtube-logo-computer-icons-subscribe-angle-rectangle-airplane-thumbnail.png" alt="YouTube Logo">
            <div class="search-bar">
                <input type="text" placeholder="Search">
                <button><i class="fas fa-search"></i></button>
            </div>
        </div>
        <div class="header-right">
            <a href="/api/v1/videos/publish-video">
                <i class="fas fa-video"></i>
            </a>
            <img src="<%= user.avatar %>" alt="Profile" class="profile-image">
           
            <!-- Profile Dropdown -->
            <div class="profile-dropdown">
                <a href="/api/v1/auth/user/channel/<%= user.username %>" class="dropdown-item">
                    <i class="fas fa-user"></i> Dashboard
                </a>
                <a href="/api/v1/auth/user/edit-profile" class="dropdown-item">
                    <i class="fas fa-cog"></i> Edit Profile
                </a>
                <a href="/api/v1/auth/user/logout" class="dropdown-item">
                    <i class="fas fa-sign-out-alt"></i> Sign Out
                </a>
            </div>
        </div>
    </div>

    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-item">
            <a href="/home" class="sidebar-link">
                <i class="fas fa-home"></i> Home
            </a>
        </div>
        <div class="sidebar-item">
            <a href="/api/v1/auth/user/subscriptions" class="sidebar-link">
                <i class="fas fa-play-circle"></i> Subscriptions
            </a>
        </div>
        <div class="sidebar-item">
            <a href="/library" class="sidebar-link">
                <i class="fas fa-folder"></i> Library
            </a>
        </div>
        <div class="sidebar-item">
            <a href="/api/v1/auth/user/watchHistory" class="sidebar-link">
                <i class="fas fa-history"></i> History
            </a>
        </div>
    </div>

    <div class="channel-container">
        <% if (channel.coverImage) { %>
            <img 
                src="<%= channel.coverImage %>" 
                alt="Cover Image" 
                class="cover-image"
            >
        <% } %>

        <!-- Profile Header -->
        <div class="profile-header">
            <!-- Avatar -->
            <img 
                src="<%= channel.avatar || '/default-avatar.png' %>" 
                alt="Channel Avatar" 
                class="avatar"
            >

            <!-- Channel Information -->
            <div class="channel-info">
                <div class="channel-name">
                    <h1><%= channel.fullname %></h1>
                </div>

                <!-- Channel Stats -->
                <div class="channel-stats">
                    <span> <a href="/api/v1/auth/user/channel/">@<%= channel.username %></span></a> 
                    <span><%= channel.subscriberCount %> Subscribers</span>
                    <span>Subscribed to <%= channel.subscribedCount %> Channels</span>
                </div>

                <!-- Action Buttons -->
                <div class="flex items-center mt-4 space-x-4">
                   
                    
                    <% if (locals.user && locals.user.username === channel.username) { %>
                    <button 
                        class="btn edit-profile-btn" 
                        onclick="openEditModal()"
                    >
                        Edit Profile
                    </button>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Videos Section -->
        <div class="video-grid">
            <% videos.forEach(function(video) { 
    const createdAtDate = new Date(video.createdAt);
    const day = createdAtDate.getUTCDate();
    const month = createdAtDate.toLocaleString("en-US", { month: "long" });
    const formattedDate = `${day} ${month}`;
%>
<div class="video-thumbnail relative">
    <a href="/api/v1/videos/video/<%= video.id %>" class="Profile-Video-Link">
        <img 
        src="<%= video.thumbnail %>" 
        alt="<%= video.title %>" 
        class="w-full h-48 object-cover"
    ></a>
    <div class="p-3">
        <h3 class="font-semibold text-sm truncate">
            <%= video.title %>
        </h3>
        <p class="text-xs text-gray-600">
            <%= video.views %> views • <%= video.formattedDate %>
        </p>
    </div>
    
    <% if (locals.user && video.owner.toString() === locals.user._id.toString()) { %>
    <a href="/api/v1/videos/video/edit/<%= video.id %>" class="absolute top-2 right-2 bg-white rounded-full p-2 shadow-md hover:bg-gray-100 transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
        </svg>
    </a>
    <% } %>
</div>
<% }); %>
    </div>

    <!-- Edit Profile Modal -->
    <div id="editProfileModal" class="modal-overlay">
        <div class="edit-modal">
            <h2>Edit Profile</h2>
            <form id="editProfileForm">
                <input 
                    type="text" 
                    name="fullname" 
                    placeholder="Full Name" 
                    value="<%= channel.fullname %>"
                >
                <input 
                    type="text" 
                    name="username" 
                    placeholder="Username" 
                    value="<%= channel.username %>"
                >
                <div class="modal-actions">
                    <button 
                        type="button" 
                        class="btn cancel-btn" 
                        onclick="closeEditModal()"
                    >
                        Cancel
                    </button>
                    <button 
                        type="submit" 
                        class="btn save-btn"
                    >
                        Save
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function toggleSubscribe() {
            const subscribeBtn = document.querySelector('.subscribe-btn');
            const isCurrentlySubscribed = subscribeBtn.textContent.trim() === 'Subscribed';
            
            fetch('/api/v1/subscriptions/subscribed/toggle/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    channelId: '<%= channel._id %>',
                    action: isCurrentlySubscribed ? 'unsubscribe' : 'subscribe'
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    subscribeBtn.textContent = isCurrentlySubscribed ? 'Subscribe' : 'Subscribed';
                    subscribeBtn.style.backgroundColor = isCurrentlySubscribed 
                        ? 'var(--red)' 
                        : 'var(--secondary-color)';
                }
            })
            .catch(error => {
                console.error('Subscription error:', error);
                alert('Failed to update subscription');
            });
        }

        function openEditModal() {
            window.location.href = '/api/v1/auth/user/edit-profile';
        }

        function closeEditModal() {
            document.getElementById('editProfileModal').style.display = 'none';
        }

        document.getElementById('editProfileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch('/api/update-profile', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Failed to update profile');
                }
            })
            .catch(error => {
                console.error('Profile update error:', error);
                alert('Failed to update profile');
            });
        });
        // Search functionality (placeholder)
        const searchInput = document.querySelector('.search-bar input');
        const searchButton = document.querySelector('.search-bar button');

        searchButton.addEventListener('click', function() {
            alert('Search for: ' + searchInput.value);
        });

        // Profile Dropdown Toggle
        const profileImage = document.querySelector('.profile-image');
        const profileDropdown = document.querySelector('.profile-dropdown');

        profileImage.addEventListener('click', function() {
            profileDropdown.classList.toggle('show');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function(event) {
            if (!profileImage.contains(event.target) && !profileDropdown.contains(event.target)) {
                profileDropdown.classList.remove('show');
            }
        });
    </script>
</body>
</html>